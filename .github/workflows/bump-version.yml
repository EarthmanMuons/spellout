# This file is generated by .github/cue/ci_tool.cue; DO NOT EDIT!

name: bump-version
"on":
  workflow_dispatch:
    inputs:
      package:
        description: Cargo package
        required: true
        default: spellout
        type: choice
        options:
          - spellabet
          - spellout
      level:
        description: Bump level
        required: true
        type: choice
        options:
          - patch
          - minor
          - major
env:
  CARGO_INCREMENTAL: 0
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  RUSTFLAGS: -D warnings
jobs:
  prepareNextRelease:
    name: prepare next release
    runs-on: ubuntu-latest
    steps:
      - id: generate_token
        name: Generate a GitHub App token
        uses: tibdex/github-app-token@b62528385c34dbc9f38e5f4225ac829252d1ea92
        with:
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.APP_PRIVATE_KEY }}
      - name: Checkout source code
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab
        with:
          ref: main
      - name: Install stable Rust toolchain
        uses: dtolnay/rust-toolchain@b44cb146d03e8d870c57ab64b80f04586349ca5d
        with:
          toolchain: stable
      - name: Cache dependencies
        uses: Swatinem/rust-cache@988c164c3d0e93c4dbab36aaf5bbeb77425b2894
        with:
          shared-key: stable-ubuntu-latest
        timeout-minutes: 5
      - name: Install cargo-release
        uses: taiki-e/install-action@835cdc15ee7680334982c900847bcafb86487299
        with:
          tool: cargo-release
      - name: Update cargo dependencies for package ${{ inputs.package }}
        run: cargo update --package "${{ inputs.package }}"
      - name: Bump ${{ inputs.level }} version for package ${{ inputs.package }}
        run: cargo release version -v --execute --no-confirm --package "${{ inputs.package }}" "${{ inputs.level }}"
      - name: Perform pre-release replacements
        run: cargo release replace -v --execute --no-confirm --package "${{ inputs.package }}"
      - name: Fix up Markdown formatting
        run: npx --yes prettier@2.8.8 --color --prose-wrap always --write -- **/*.md
      - name: Get the new release version
        run: |-
          version=$(cargo metadata --no-deps --format-version=1 | jq -r '.packages[] | select(.name == "${{ inputs.package }}") | .version')
          echo "release_version=${version}" >> "$GITHUB_ENV"
      - id: cpr
        name: Create pull request
        uses: peter-evans/create-pull-request@284f54f989303d2699d373481a0cfa13ad5a6666
        with:
          token: ${{ steps.generate_token.outputs.token }}
          branch-suffix: timestamp
          commit-message: Prepare ${{ inputs.package }} v${{ env.release_version }} ${{ inputs.level }} release
          title: Prepare ${{ inputs.package }} v${{ env.release_version }} ${{ inputs.level }} release
          body: |-
            This PR was automatically created by the [bump-version](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}) workflow, which ran the following commands:


            ```
            $ cargo update --package ${{ inputs.package }}
            $ cargo release version --execute --package ${{ inputs.package }} ${{ inputs.level }}
            $ cargo release replace --execute --package ${{ inputs.package }}
            $ prettier --prose-wrap always --write -- **/*.md
            ```

            **Please review the submitted changes.**

            Once this PR is merged into the _main_ branch, an automated process will tag the rebased commit.
      - name: Annotate workflow run with PR URL
        run: 'echo "#### :shipit: Opened pull request for ${{ inputs.package }} v${{ env.release_version }}: ${{ steps.cpr.outputs.pull-request-url }}" >> "$GITHUB_STEP_SUMMARY"'
