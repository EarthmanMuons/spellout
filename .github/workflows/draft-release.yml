# This file is generated by .github/cue/ci_tool.cue; DO NOT EDIT!

name: draft-release
"on":
  push:
    tags:
      - v[0-9]+.[0-9]+.[0-9]+
permissions:
  contents: write
env:
  CARGO_INCREMENTAL: 0
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  RUSTFLAGS: -D warnings
jobs:
  create_release:
    name: create draft release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.gh_release.outputs.upload_url }}
      url: ${{ steps.gh_release.outputs.url }}
    steps:
      - name: Checkout source code
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab
      - id: gh_release
        name: Create a new GitHub draft release
        uses: softprops/action-gh-release@de2c0eb89ae2a093876385947365aca7b0e5f844
        with:
          draft: true
          generate_release_notes: true
      - name: Annotate workflow run with draft release URL
        run: 'echo "### :shipit: Opened draft release for: [spellout ${{ github.ref_name }}](${{ steps.gh_release.outputs.url }})" >> "$GITHUB_STEP_SUMMARY"'
  upload_assets:
    name: upload release assets
    needs:
      - create_release
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: aarch64-apple-darwin
            os: macos-latest
          - target: aarch64-pc-windows-msvc
            os: windows-latest
          - target: aarch64-unknown-linux-musl
            os: ubuntu-latest
          - target: x86_64-apple-darwin
            os: macos-latest
          - target: x86_64-pc-windows-msvc
            os: windows-latest
          - target: x86_64-unknown-linux-musl
            os: ubuntu-latest
    runs-on: ${{ matrix.os }}
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout source code
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab
      - name: Install musl tools
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get install -y musl-tools
      - name: Install stable Rust toolchain
        uses: dtolnay/rust-toolchain@b44cb146d03e8d870c57ab64b80f04586349ca5d
        with:
          toolchain: stable
          targets: ${{ matrix.target }}
      - name: Cache dependencies
        uses: Swatinem/rust-cache@988c164c3d0e93c4dbab36aaf5bbeb77425b2894
        with:
          shared-key: stable-ubuntu-latest
        timeout-minutes: 5
      - name: Install cross
        uses: taiki-e/install-action@835cdc15ee7680334982c900847bcafb86487299
        with:
          tool: cross
      - name: Building release assets
        env:
          CARGO: cross
          CARGO_BUILD_TARGET: ${{ matrix.target }}
        run: cargo xtask dist
      - name: Uploading release assets
        run: "[[ \"${{ matrix.os }}\" == \"windows-latest\" ]] && extension=\"zip\" || extension=\"tar.gz\" \nfilename=\"spellout-${GITHUB_REF_NAME:1}-${{ matrix.target }}.${extension}\"\necho \"Uploading ${filename} to: ${{ needs.create_release.outputs.upload_url }}\"\ngh release upload \"$GITHUB_REF_NAME\" \"target/dist/${filename}\"\necho \"- Uploaded release asset ${filename}\" >>\"$GITHUB_STEP_SUMMARY\""
